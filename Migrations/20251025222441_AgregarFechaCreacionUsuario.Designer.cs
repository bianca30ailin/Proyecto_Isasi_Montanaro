// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto_Isasi_Montanaro.Models;

#nullable disable

namespace Proyecto_Isasi_Montanaro.Migrations
{
    [DbContext(typeof(ProyectoTallerContext))]
    [Migration("20251025222441_AgregarFechaCreacionUsuario")]
    partial class AgregarFechaCreacionUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FuncionUsuario", b =>
                {
                    b.Property<int>("IdTipoUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_usuario");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.HasKey("IdTipoUsuario", "IdUsuario")
                        .HasName("PK__funcion___759E98823F5F8A42");

                    b.HasIndex("IdUsuario");

                    b.ToTable("funcion_usuario", (string)null);
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.Categorium", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_categoria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nombre");

                    b.HasKey("IdCategoria")
                        .HasName("PK__categori__CD54BC5A610BB531");

                    b.ToTable("categoria", (string)null);
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.Ciudad", b =>
                {
                    b.Property<int>("IdCiudad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_ciudad");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCiudad"));

                    b.Property<int>("IdProvincia")
                        .HasColumnType("int")
                        .HasColumnName("id_provincia");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("IdCiudad")
                        .HasName("PK__ciudad__B7DC4CD5C121E7BB");

                    b.HasIndex("IdProvincia");

                    b.ToTable("ciudad", (string)null);
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.Cliente", b =>
                {
                    b.Property<int>("DniCliente")
                        .HasColumnType("int")
                        .HasColumnName("dni_cliente");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("apellido");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono");

                    b.HasKey("DniCliente")
                        .HasName("PK__cliente__F53D4BA5B5774DF0");

                    b.ToTable("cliente", (string)null);
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.DetalleVentaProducto", b =>
                {
                    b.Property<int>("IdDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_detalle");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalle"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int>("IdNroVenta")
                        .HasColumnType("int")
                        .HasColumnName("id_nro_venta");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("id_producto");

                    b.Property<double>("Subtotal")
                        .HasColumnType("float")
                        .HasColumnName("subtotal");

                    b.HasKey("IdDetalle")
                        .HasName("PK__detalle___4F1332DE0C4A86F4");

                    b.HasIndex("IdNroVenta");

                    b.HasIndex("IdProducto");

                    b.ToTable("detalle_venta_producto", (string)null);
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.Direccion", b =>
                {
                    b.Property<int>("IdDireccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_direccion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDireccion"));

                    b.Property<int>("Altura")
                        .HasColumnType("int")
                        .HasColumnName("altura");

                    b.Property<int>("CodigoPostal")
                        .HasColumnType("int")
                        .HasColumnName("codigo_postal");

                    b.Property<int?>("DniCliente")
                        .HasColumnType("int")
                        .HasColumnName("dni_cliente");

                    b.Property<int>("IdCiudad")
                        .HasColumnType("int")
                        .HasColumnName("id_ciudad");

                    b.Property<string>("NombreCalle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombreCalle");

                    b.HasKey("IdDireccion")
                        .HasName("PK__direccio__25C35D07EA902764");

                    b.HasIndex("DniCliente");

                    b.HasIndex("IdCiudad");

                    b.ToTable("direccion", (string)null);
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.Envio", b =>
                {
                    b.Property<int>("IdEnvio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_envio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEnvio"));

                    b.Property<double>("Costo")
                        .HasColumnType("float")
                        .HasColumnName("costo");

                    b.Property<DateOnly?>("FechaDespacho")
                        .HasColumnType("date")
                        .HasColumnName("fehca_despacho");

                    b.Property<int>("IdDireccion")
                        .HasColumnType("int");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int")
                        .HasColumnName("id_estado");

                    b.Property<int>("IdNroVenta")
                        .HasColumnType("int")
                        .HasColumnName("id_nro_venta");

                    b.Property<int>("IdTransporte")
                        .HasColumnType("int")
                        .HasColumnName("id_transporte");

                    b.Property<string>("NumSeguimiento")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("num_seguimiento");

                    b.HasKey("IdEnvio")
                        .HasName("PK__envio__8C48C8CAEABDBD3A");

                    b.HasIndex("IdDireccion");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdNroVenta");

                    b.HasIndex("IdTransporte");

                    b.ToTable("envio", (string)null);
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.Estado", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_estado");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstado"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("nombre");

                    b.HasKey("IdEstado")
                        .HasName("PK__estado__86989FB20C055FB1");

                    b.ToTable("estado", (string)null);

                    b.HasData(
                        new
                        {
                            IdEstado = 1,
                            Descripcion = "Pedido confirmado, preparando para envío",
                            Nombre = "En preparación"
                        },
                        new
                        {
                            IdEstado = 2,
                            Descripcion = "Pedido despachado, en tránsito",
                            Nombre = "En camino"
                        },
                        new
                        {
                            IdEstado = 3,
                            Descripcion = "Pedido recibido por el cliente",
                            Nombre = "Entregado"
                        },
                        new
                        {
                            IdEstado = 4,
                            Descripcion = "A la espera de procesamiento",
                            Nombre = "Pendiente"
                        },
                        new
                        {
                            IdEstado = 5,
                            Descripcion = "Envío cancelado antes del despacho",
                            Nombre = "Cancelado"
                        },
                        new
                        {
                            IdEstado = 6,
                            Descripcion = "El pedido fue devuelto al origen",
                            Nombre = "Devuelto"
                        });
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.EstadoVenta", b =>
                {
                    b.Property<int>("IdEstadoVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoVenta"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Motivo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdEstadoVenta");

                    b.ToTable("EstadoVenta");

                    b.HasData(
                        new
                        {
                            IdEstadoVenta = 1,
                            Descripcion = "Venta confirmada y en curso",
                            NombreEstado = "Activa"
                        },
                        new
                        {
                            IdEstadoVenta = 2,
                            Descripcion = "Venta registrada, esperando confirmación del pago",
                            NombreEstado = "Pendiente de pago"
                        },
                        new
                        {
                            IdEstadoVenta = 3,
                            Descripcion = "Venta anulada por el cliente o vendedor",
                            NombreEstado = "Cancelada"
                        },
                        new
                        {
                            IdEstadoVenta = 4,
                            Descripcion = "Venta finalizada con entrega y pago confirmados",
                            NombreEstado = "Completada"
                        });
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_producto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("Baja")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("baja")
                        .IsFixedLength();

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("descripcion");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("id_categoria");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<double>("Precio")
                        .HasColumnType("float")
                        .HasColumnName("precio");

                    b.Property<int>("StockMinimo")
                        .HasColumnType("int")
                        .HasColumnName("stock_minimo");

                    b.HasKey("IdProducto")
                        .HasName("PK__producto__FF341C0D810F0BF8");

                    b.HasIndex("IdCategoria");

                    b.ToTable("producto", (string)null);
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.Provincium", b =>
                {
                    b.Property<int>("IdProvincia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_provincia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProvincia"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("IdProvincia")
                        .HasName("PK__provinci__66C18BFDA3FE9356");

                    b.ToTable("provincia", (string)null);
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.TipoUsuario", b =>
                {
                    b.Property<int>("IdTipoUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_usuario");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("tipo");

                    b.HasKey("IdTipoUsuario")
                        .HasName("PK__tipo_usu__B17D78C8165631FD");

                    b.ToTable("tipo_usuario", (string)null);

                    b.HasData(
                        new
                        {
                            IdTipoUsuario = 1,
                            Descripcion = "Usuario con acceso total al sistema",
                            Tipo = "Admin"
                        },
                        new
                        {
                            IdTipoUsuario = 2,
                            Descripcion = "Usuario que registra las ventas",
                            Tipo = "Ventas"
                        },
                        new
                        {
                            IdTipoUsuario = 3,
                            Descripcion = "Usuario que se encarga de registrar los envíos y sus estados",
                            Tipo = "Logistica"
                        },
                        new
                        {
                            IdTipoUsuario = 4,
                            Descripcion = "Usuario que se encarga del inventario",
                            Tipo = "Inventario"
                        });
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.Transporte", b =>
                {
                    b.Property<int>("IdTransporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_transporte");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTransporte"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("IdTransporte")
                        .HasName("PK__transpor__7AC9B3AEB3C4D8CC");

                    b.ToTable("transporte", (string)null);
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("apellido");

                    b.Property<string>("Baja")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("baja")
                        .IsFixedLength();

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contraseña");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("direccion");

                    b.Property<int>("Dni")
                        .HasColumnType("int")
                        .HasColumnName("dni");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono");

                    b.HasKey("IdUsuario")
                        .HasName("PK__usuario__4E3E04ADF6B4BB0C");

                    b.HasIndex(new[] { "Email" }, "UQ__usuario__AB6E61642F811227")
                        .IsUnique();

                    b.HasIndex(new[] { "Dni" }, "UQ__usuario__D87608A7AF6E4AC8")
                        .IsUnique();

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.Ventum", b =>
                {
                    b.Property<int>("IdNroVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_nro_venta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNroVenta"));

                    b.Property<int>("DniCliente")
                        .HasColumnType("int")
                        .HasColumnName("dni_cliente");

                    b.Property<int?>("EstadoVentaId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaHora")
                        .HasColumnType("date")
                        .HasColumnName("fechaHora");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<double>("Total")
                        .HasColumnType("float")
                        .HasColumnName("total");

                    b.HasKey("IdNroVenta")
                        .HasName("PK__venta__D47121A5607A29DB");

                    b.HasIndex("DniCliente");

                    b.HasIndex("EstadoVentaId");

                    b.HasIndex("IdUsuario");

                    b.ToTable("venta", (string)null);
                });

            modelBuilder.Entity("FuncionUsuario", b =>
                {
                    b.HasOne("Proyecto_Isasi_Montanaro.Models.TipoUsuario", null)
                        .WithMany()
                        .HasForeignKey("IdTipoUsuario")
                        .IsRequired()
                        .HasConstraintName("FK__funcion_u__id_ti__6E01572D");

                    b.HasOne("Proyecto_Isasi_Montanaro.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK__funcion_u__id_us__6EF57B66");
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.Ciudad", b =>
                {
                    b.HasOne("Proyecto_Isasi_Montanaro.Models.Provincium", "IdProvinciaNavigation")
                        .WithMany("Ciudads")
                        .HasForeignKey("IdProvincia")
                        .IsRequired()
                        .HasConstraintName("FK__ciudad__id_provi__4BAC3F29");

                    b.Navigation("IdProvinciaNavigation");
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.DetalleVentaProducto", b =>
                {
                    b.HasOne("Proyecto_Isasi_Montanaro.Models.Ventum", "IdNroVentaNavigation")
                        .WithMany("DetalleVentaProductos")
                        .HasForeignKey("IdNroVenta")
                        .IsRequired()
                        .HasConstraintName("FK__detalle_v__id_nr__71D1E811");

                    b.HasOne("Proyecto_Isasi_Montanaro.Models.Producto", "IdProductoNavigation")
                        .WithMany("DetalleVentaProductos")
                        .HasForeignKey("IdProducto")
                        .IsRequired()
                        .HasConstraintName("FK__detalle_v__id_pr__72C60C4A");

                    b.Navigation("IdNroVentaNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.Direccion", b =>
                {
                    b.HasOne("Proyecto_Isasi_Montanaro.Models.Cliente", "Cliente")
                        .WithMany("Direcciones")
                        .HasForeignKey("DniCliente")
                        .HasConstraintName("FK_direccion_cliente");

                    b.HasOne("Proyecto_Isasi_Montanaro.Models.Ciudad", "IdCiudadNavigation")
                        .WithMany("Direccions")
                        .HasForeignKey("IdCiudad")
                        .IsRequired()
                        .HasConstraintName("FK__direccion__id_ci__4E88ABD4");

                    b.Navigation("Cliente");

                    b.Navigation("IdCiudadNavigation");
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.Envio", b =>
                {
                    b.HasOne("Proyecto_Isasi_Montanaro.Models.Direccion", "IdDireccionNavigation")
                        .WithMany()
                        .HasForeignKey("IdDireccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto_Isasi_Montanaro.Models.Estado", "IdEstadoNavigation")
                        .WithMany("Envios")
                        .HasForeignKey("IdEstado")
                        .IsRequired()
                        .HasConstraintName("FK__envio__id_estado__66603565");

                    b.HasOne("Proyecto_Isasi_Montanaro.Models.Ventum", "IdNroVentaNavigation")
                        .WithMany("Envios")
                        .HasForeignKey("IdNroVenta")
                        .IsRequired()
                        .HasConstraintName("FK__envio__id_nro_ve__68487DD7");

                    b.HasOne("Proyecto_Isasi_Montanaro.Models.Transporte", "IdTransporteNavigation")
                        .WithMany("Envios")
                        .HasForeignKey("IdTransporte")
                        .IsRequired()
                        .HasConstraintName("FK__envio__id_transp__6754599E");

                    b.Navigation("IdDireccionNavigation");

                    b.Navigation("IdEstadoNavigation");

                    b.Navigation("IdNroVentaNavigation");

                    b.Navigation("IdTransporteNavigation");
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.Producto", b =>
                {
                    b.HasOne("Proyecto_Isasi_Montanaro.Models.Categorium", "IdCategoriaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoria")
                        .IsRequired()
                        .HasConstraintName("FK__producto__id_cat__6B24EA82");

                    b.Navigation("IdCategoriaNavigation");
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.Ventum", b =>
                {
                    b.HasOne("Proyecto_Isasi_Montanaro.Models.Cliente", "DniClienteNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("DniCliente")
                        .IsRequired()
                        .HasConstraintName("FK__venta__dni_clien__628FA481");

                    b.HasOne("Proyecto_Isasi_Montanaro.Models.EstadoVenta", "EstadoVenta")
                        .WithMany("Ventas")
                        .HasForeignKey("EstadoVentaId");

                    b.HasOne("Proyecto_Isasi_Montanaro.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__venta__id_usuari__6383C8BA");

                    b.Navigation("DniClienteNavigation");

                    b.Navigation("EstadoVenta");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.Categorium", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.Ciudad", b =>
                {
                    b.Navigation("Direccions");
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.Cliente", b =>
                {
                    b.Navigation("Direcciones");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.Estado", b =>
                {
                    b.Navigation("Envios");
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.EstadoVenta", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.Producto", b =>
                {
                    b.Navigation("DetalleVentaProductos");
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.Provincium", b =>
                {
                    b.Navigation("Ciudads");
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.Transporte", b =>
                {
                    b.Navigation("Envios");
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.Usuario", b =>
                {
                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Proyecto_Isasi_Montanaro.Models.Ventum", b =>
                {
                    b.Navigation("DetalleVentaProductos");

                    b.Navigation("Envios");
                });
#pragma warning restore 612, 618
        }
    }
}
